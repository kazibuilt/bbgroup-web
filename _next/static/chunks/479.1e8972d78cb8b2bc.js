"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[479],{2479:function(e,t,r){r.r(t),r.d(t,{WebGLCity:function(){return A}});var n=r(1527),o=r(3409),a=r(8296),l=r(6633),u=r(2485),i=r(9926),s=r(5199),c=r(708),d=r(2085),p=r(3257),v=r(3793),f=r(9223),g=r(7943),m=r(959),h=r(5060);function x(e){let{id:t="point",color:r="red",active:o,onToggle:a,onChange:l}=e,u=(0,d.st)(),s=(0,m.useRef)(),c=(0,m.useRef)(),{set:p}=(0,v.w)(u,t,{x:i.types.number(0,{nudgeMultiplier:.01}),y:i.types.number(0,{nudgeMultiplier:.01}),z:i.types.number(0,{nudgeMultiplier:.01})},{onValuesChange:e=>{let{x:t,y:r,z:n}=e;null==l||l([t,r,n]),c.current.position.set(t,r,n)}});return(0,n.jsxs)(n.Fragment,{children:[o&&(0,n.jsx)(f.Y,{object:c.current,onMouseUp:()=>{let{x:e,y:t,z:r}=s.current.worldPosition;p({x:e,y:t,z:r})},ref:s}),(0,n.jsxs)("mesh",{ref:c,scale:.1,onPointerDown:e=>{e.stopPropagation(),setTimeout(()=>{null==a||a(!0)},100)},onPointerMissed:()=>{null==a||a(!1)},renderOrder:1e4,children:[(0,n.jsx)("boxGeometry",{}),(0,n.jsx)("meshBasicMaterial",{color:r,depthTest:!1,depthWrite:!1})]})]})}function y(e){let{id:t="spline",color:r="red",onChange:o}=e,[a,l]=(0,m.useState)(2),[u,s]=(0,m.useState)([[1,1,1],[0,0,0]]),[c,p]=(0,m.useState)(),f=(0,m.useMemo)(()=>new h.CatmullRomCurve3(u.map(e=>{let[t,r,n]=e;return new h.Vector3(t,r,n)}),!1,"centripetal",.5),[u]);(0,m.useEffect)(()=>{null==o||o(f)},[f]);let y=(0,d.st)();return(0,v.w)(y,t,{count:i.types.number(2,{range:[2,25],nudgeMultiplier:1})},{onValuesChange:e=>{let{count:t}=e;l(t)}}),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(g.q,{points:u,color:r,type:"centripetal",tension:.5}),Array(a).fill(0).map((e,o)=>(0,n.jsx)(x,{color:r,id:t+" / points / ".concat(o),onToggle:e=>{p(e?o:void 0)},active:c===o,onChange:e=>{s(t=>{let r=[...t];return r[o]=e,r})}},o))]})}let C=new h.Vector3;function w(e){let{...t}=e,r=(0,m.useRef)(),o=(0,u.A)(e=>{let{scene:t}=e;return t}),a=(0,u.A)(e=>{let{camera:t}=e;return t}),l=(0,u.A)(e=>{let{controls:t}=e;return t}),s=(0,m.useMemo)(()=>a.clone(),[a]);(0,m.useEffect)(()=>(r.current=new h.CameraHelper(s),o.add(r.current),()=>{o.remove(r.current)}),[s]);let[c,p]=(0,m.useState)(),[f,g]=(0,m.useState)(),x=(0,d.st)();return(0,v.w)(x,"camera path",{progress:i.types.number(0,{range:[0,1],nudgeMultiplier:.1}),pov:i.types.boolean(!0)},{onValuesChange:e=>{let{pov:t,progress:n}=e;if(l&&(l.enabled=!t),!c||!f)return;let o=c.getPoint(n,C).clone(),u=f.getPoint(n,C).clone();s.position.copy(o),s.lookAt(u),r.current.update(),r.current.visible=!t,t&&(a.setPosition(o),a.setTarget(u))},deps:[a,l,s,c,f]}),(0,n.jsxs)("group",{...t,children:[(0,n.jsx)(y,{id:"camera path / target",color:"blue",onChange:e=>{g(e)}}),(0,n.jsx)(y,{id:"camera path / position",color:"red",onChange:e=>{p(e)}})]})}var b=r(1086),_=r(8098),S=r(7492),j=r(690);let M=(0,m.forwardRef)(function(e,t){let{children:r,width:o,height:a,eventSource:l,rect:i}=e,{size:s,viewport:c,gl:d}=(0,u.A)(),p=c.dpr,v=d.capabilities.maxSamples,f=function(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n=(0,m.useMemo)(()=>{let n=new h.WebGLRenderTarget(e,t,{minFilter:h.LinearFilter,magFilter:h.LinearFilter,type:h.HalfFloatType,...r});return r.depth&&(n.depthTexture=new h.DepthTexture(e,t,h.FloatType)),n},[]);return(0,m.useEffect)(()=>()=>n.dispose(),[]),n}((o||s.width)*c.dpr,(a||s.height)*c.dpr,{samples:p<2?v:0}),[g]=(0,m.useState)(()=>new h.Scene);return(0,m.useImperativeHandle)(t,()=>f.texture,[f]),(0,n.jsxs)(n.Fragment,{children:[(0,u.g)((0,n.jsxs)(T,{fbo:f,eventSource:l,children:[r,(0,n.jsx)("group",{onPointerOver:()=>null,matrixAutoUpdate:!1})]}),g,{events:{connected:l},size:{width:i.width,height:i.height}}),(0,n.jsx)("primitive",{object:f.texture})]})});function T(e){let{children:t,fbo:r}=e;return(0,u.C)(e=>{let{gl:t,scene:n,camera:o}=e;t.setRenderTarget(r),t.clear(),t.render(n,o),t.setRenderTarget(null)}),t}let V=new h.Vector3;function A(e){let{width:t,height:r,top:f,left:g,eventSource:x}=e,y={top:f,left:g,width:t,height:r},C=(0,m.useRef)(),T=(0,c.Hm)();(0,u.C)(()=>{let e=null==T?void 0:T();e&&(C.current.position.y=e.y)});let{scene:A,nodes:E}=(0,o.L)("/models/RRE-City.instances.glb"),U=(0,S.m)(["/textures/1_Baked_Texture.jpg","/textures/2_Baked_Texture.jpg","/textures/3_Baked_Texture.jpg","/textures/4_Baked_Texture.jpg","/textures/5_Baked_Texture.jpg","/textures/6_Baked_Texture.jpg","/textures/7_Baked_Texture.jpg","/textures/8_Baked_Texture.jpg"]);(0,m.useEffect)(()=>{U.length<8||(A.traverse(e=>{if(e.isMesh){let t=U[e.name.replace("Building_","")-1];e.material=new h.MeshBasicMaterial,t&&(t.flipY=!1,t.minFilter=t.magFilter=h.NearestFilter,t.needsUpdate=!0,e.material.map=t,e.material.needsUpdate=!0)}}),A.traverse(e=>{if(e.name.includes("_Empty")){var t;let r=null===(t=E[e.name.replace("_Empty_2","").replace("_Empty_3","").replace("_Empty_4","").replace("_Empty_5","").replace("_Empty","")])||void 0===t?void 0:t.clone();r&&(r.position.x=0,r.position.z=0,e.position.y=0,e.scale.set(1,1,1),e.add(r))}}))},[A,E,U]);let[z,D]=(0,m.useState)(),[k]=(0,m.useState)(()=>new j.V({transparent:!0}));(0,m.useEffect)(()=>{z&&(k.map=z,k.needsUpdate=!0)},[z,k]);let B=(0,u.A)(e=>{let{size:t}=e;return t}),F=(0,u.A)(e=>{let{viewport:t}=e;return t});(0,m.useEffect)(()=>{let e=F.dpr;k.resolution.set(B.width*e,B.height*e)},[k,B,F]);let{texture:R,size:O,granularity:G,color:L,opacity:P}=(0,b.useDithering)();(0,m.useEffect)(()=>{k.uniforms.uDitheringTexture.value=R,k.uniforms.uDitheringTextureSize.value.copy(O)},[R,O]),(0,m.useEffect)(()=>{k.uniforms.uGranularity.value=G;let{r:e,g:t,b:r}=L;k.uniforms.uColor.value.set(e,t,r),k.uniforms.uBlending.value=P},[G,L,P]);let{getTexture:N}=(0,_.kB)();(0,u.C)(()=>{let e=N();k.uniforms.uFlowmapTexture.value=e},-1);let[H]=(0,m.useState)(()=>new h.MeshBasicMaterial({transparent:!0}));(0,m.useEffect)(()=>{H.map=z,H.needsUpdate=!0},[H,z]);let W=(0,d.st)(),[Y,q]=(0,m.useState)(!0);(0,v.w)(W,"webgl",{dithering:i.types.boolean(!0)},{onValuesChange:e=>{let{dithering:t}=e;q(t)}});let{get:I}=(0,v.w)(W,"kinesis",{power:i.types.number(.1,{range:[0,.5],nudgeMultiplier:.01})},{onValuesChange:e=>{let{dithering:t}=e;q(t)}}),J=(0,p.Vn)();(0,m.useEffect)(()=>{if(x&&J){function e(e){e.stopPropagation()}return x.addEventListener("wheel",e),()=>{x.removeEventListener("wheel",e)}}},[x,J]);let X=(0,m.useRef)(),Z=(0,m.useRef)(),[K]=(0,m.useState)(()=>new h.Spherical),[Q]=(0,m.useState)(()=>new h.Vector2);return(0,m.useEffect)(()=>{X.current._position=X.current.position.clone(),X.current.setPosition=e=>{X.current._position=e},X.current._target=new h.Vector3,X.current.setTarget=e=>{X.current._target=e},X.current._offset=new h.Vector3,X.current.setOffset=e=>{X.current._offset=e}},[]),(0,m.useEffect)(()=>{function e(e){let t=(e.clientX-y.left)/y.width*2-1,r=(e.clientY-y.top)/y.height*2-1;s.ZP.to(Q,{x:t,y:r,duration:4,ease:"expo.out",onUpdate:()=>{let e=X.current;if(!(null==e?void 0:e._position)||!(null==e?void 0:e._target))return;let t=e._position.clone(),r=e._target.clone(),{power:n}=I();K.setFromVector3(t.clone().sub(r)),K.set(K.radius,K.phi+Q.y*n,K.theta+Q.x*n);let o=V.setFromSpherical(K);e.setOffset(r.clone().add(o).sub(t))}})}return x.addEventListener("mousemove",e,!1),()=>{x.removeEventListener("mousemove",e,!1)}},[x,K,y]),(0,u.C)(()=>{let e=Z.current;if(null==e?void 0:e.enabled)return;let t=X.current;if(t._target&&t._position&&t._offset){let e=t._position.clone().add(t._offset);t.position.copy(e),X.current.lookAt(t._target)}}),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(M,{ref:e=>{e&&D(e)},width:t,height:r,rect:y,eventSource:x,children:[J&&(0,n.jsx)(a.z,{domElement:x,makeDefault:!0,ref:Z}),(0,n.jsx)(l.c,{position:[0,0,5],makeDefault:!0,ref:X}),(0,n.jsx)("primitive",{object:A,scale:1,matrixAutoUpdate:!1}),(0,n.jsx)(w,{visible:J})]}),(0,n.jsxs)("group",{ref:C,children:[!Y&&J&&(0,n.jsxs)("mesh",{scale:[t,r,1],position:[0,0,-1],children:[(0,n.jsx)("planeGeometry",{}),(0,n.jsx)("meshBasicMaterial",{color:"black",transparent:!0})]}),(0,n.jsx)("mesh",{scale:[t,r,1],material:Y||!J?k:H,children:(0,n.jsx)("planeGeometry",{})})]})]})}},7492:function(e,t,r){r.d(t,{m:function(){return u}});var n=r(2485),o=r(959),a=r(5060);let l=new a.TextureLoader;function u(e,t){let r=(0,n.A)(e=>{let{gl:t}=e;return t}),u=Array.isArray(e),[i,s]=(0,o.useState)(u?[]:void 0),c=(0,o.useRef)([]);return(0,o.useLayoutEffect)(()=>{if(!e)return;let n=[e].flat();return n.forEach((e,o)=>{a.DefaultLoadingManager.itemStart(e),l.load(e,l=>{u?(c.current[o]=l,c.current.filter(e=>e.isTexture).length===n.length&&(s(c.current),null==t||t(c.current))):(s(l),null==t||t(l)),a.DefaultLoadingManager.itemEnd(e),r.initTexture(l)})}),()=>{c.current.map(e=>{e.dispose()}),c.current=[]}},[JSON.stringify(e)]),i}},690:function(e,t,r){r.d(t,{V:function(){return l}});var n=r(6057),o=r(5060);let a="\n  ".concat("\n	vec3 blendNormal(vec3 base, vec3 blend) {\n		return blend;\n	}\n\n	vec3 blendNormal(vec3 base, vec3 blend, float opacity) {\n		return (blendNormal(base, blend) * opacity + base * (1.0 - opacity));\n	}","\n  \n  uniform vec2 uResolution;\n  uniform sampler2D uMap;\n  uniform float uGranularity;\n  uniform vec3 uColor;\n  uniform float uBlending;\n  uniform vec3 uBackgroundColor;\n  uniform float uOpacity;\n  uniform vec2 uAspect;\n  uniform float uScale;\n  uniform vec2 uOffset;\n  \n\n  uniform sampler2D uDitheringTexture;\n  uniform vec2 uDitheringTextureSize;\n\n  uniform sampler2D uFlowmapTexture;\n\n  varying vec2 vUv;\n  varying vec2 vAspectCorrectedUV;\n  varying vec2 vMeshSize;\n\n\n  vec2 scaleUV(vec2 uv, float scale) {\n    // Convert uv range to -1 to 1\n    uv = uv * 2.0 - 1.0;\n    \n    // Scale uv\n    uv *= ((-scale + 1.) * 0.5 + 0.5) * 2.0;\n    \n    // Convert back to 0 to 1 range\n    uv = uv * 0.5 + 0.5;\n\n    return uv;\n  }\n\n\n    float indexValue(float granularity) {\n      vec2 coords = mod((vUv * vMeshSize) / granularity, uDitheringTextureSize) / uDitheringTextureSize;\n\n      return texture2D(uDitheringTexture, coords).r;\n    }\n\n\n    float dither(float value, float granularity) {\n        float threshold = indexValue(granularity);\n\n        return (value <= threshold) ? 0. : 1.;\n    }\n\n\n    float gammaCorrection(float value, float gamma) {\n        return pow(value, 1.0 / gamma);\n    }\n\n    float luminance(vec3 color) {\n        return (color.r + color.g + color.b) / 3.;\n    }\n\n  vec2 pixelation(vec2 uv, vec2 granularity, vec2 aspect) {\n    vec2 aspectCorrectedUV = (uv - 0.5) * 1. / aspect + 0.5;\n    vec2 aspectCorrectedGranularity = granularity * (1. / aspect);\n\n\n    vec2 textureSize = vMeshSize * aspect;\n    vec2 deltaSize = textureSize - vMeshSize;\n    vec2 borderSize = deltaSize / 2.;\n\n    vec2 offset = mod(borderSize, granularity);\n    offset /= granularity;\n\n\n    float x = aspectCorrectedGranularity.x / vMeshSize.x;\n    float y = aspectCorrectedGranularity.y / vMeshSize.y;\n    float w = 1.0 / x;\n    float z = 1.0 / y;\n\n    return vec2(x,y) * (floor((aspectCorrectedUV * vec2(w,z)) - offset) + 0.5);\n  }\n\n  void main() {\n     vec2 screenAspect = vec2(uResolution.y / uResolution.x, 1.);\n    vec4 flowmap = texture2D(uFlowmapTexture, pixelation(gl_FragCoord.xy / uResolution.xy, vec2(uGranularity * 15.) * screenAspect,vec2(1.,1.)));\n\n    flowmap.b = clamp(0., flowmap.b, 1.);\n\n    // TODO: to fix\n    float granularity = uGranularity + floor(flowmap.b);\n    vec2 granularityAspectRatio = granularity * (1./uAspect);\n    // vec2 granularityAspectRatio = vec2(granularity);\n\n    //TODO: to fix vAspectCorrectedUV doesn't match with dithering granularity\n    // vec2 pixelsUv = pixelation(vAspectCorrectedUV, granularityAspectRatio,uAspect);\n\n    vec2 uv = vUv;\n    uv = scaleUV(uv, uScale);\n    uv += uOffset;\n    vec2 pixelsUv = pixelation(uv, vec2(granularity), uAspect);\n    // pixelsUv = vAspectCorrectedUV;\n    \n    \n    vec3 rgb = texture2D(uMap, pixelsUv).rgb;\n    float grayscaled = luminance(rgb);\n    vec3 grayscaledColor = vec3(grayscaled);\n\n    float dithered = dither(grayscaled, granularity);\n    float invertedDithered = 1. - dithered;\n    vec3 ditheredColor = vec3(dithered);\n    // ditheredColor *= uBackgroundColor;\n\n    // vec3 color = blendNormal(grayscaledColor, ditheredColor + uColor, uBlending);\n    // vec3 color = blendNormal(uColor, ditheredColor + uColor, uBlending);\n    // vec3 color = blendNormal(grayscaledColor * uColor, ditheredColor + uColor, uBlending);\n    // color = blendNormal(uBackgroundColor, color, 1.-dithered);\n\n    vec3 color = invertedDithered * uColor + dithered * uBackgroundColor;\n\n    gl_FragColor = vec4(color, uOpacity);\n    \n  }\n");class l extends o.ShaderMaterial{set map(e){this.uniforms.uMap.value=e,this.needsUpdate=!0}set opacity(e){this.uniforms&&(this.uniforms.uOpacity.value=parseFloat(e))}set scale(e){this.uniforms&&(this.uniforms.uScale.value=parseFloat(e))}constructor(){super({uniforms:{uMap:{value:null},uAspect:{value:new o.Vector2(1,1)},uResolution:{value:new o.Vector2(1,1)},uGranularity:{value:2},uDitheringTexture:{value:null},uDitheringTextureSize:{value:new o.Vector2},uFlowmapTexture:{value:null},uColor:{value:new o.Color},uBlending:{value:1},uOpacity:{value:1},uBackgroundColor:{value:new o.Color(n.colors.white)},uScale:{value:1},uOffset:{value:new o.Vector2(0,0)}},vertexShader:"\n  uniform vec2 uAspect;\n  \n\n  varying vec2 vUv;\n  varying vec2 vAspectCorrectedUV;\n  varying vec2 vMeshSize;\n\n  void main() {\n    vUv = uv;\n\n    vAspectCorrectedUV = (uv - 0.5) * 1. / uAspect + 0.5;\n\n    vMeshSize = vec2(length(modelViewMatrix[0]), length(modelViewMatrix[1]));\n\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n  }\n",fragmentShader:a,transparent:!0}),this.resolution=this.uniforms.uResolution.value,this.aspect=this.uniforms.uAspect.value,this.offset=this.uniforms.uOffset.value,this.type="MediaMaterial"}}}}]);